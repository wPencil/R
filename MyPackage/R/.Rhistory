risk_model <- readRDS("C:/Users/wyh/OneDrive/Github/R/MyPackage/data/risk_model.rds")
coef(risk_model)
gene <- coef(risk_model)
# package---------------------------------------------------------------------
library(magrittr)
gene <- coef(risk_model) %>% as.matrix()
View(gene)
# Component genes and corresponding coefficients of the risk model
gene <- coef(risk_model) %>% as.matrix(,rownames = "1")
View(gene)
# Component genes and corresponding coefficients of the risk model
gene <- coef(risk_model) %>% as.matrix(,rownames = T)
View(gene)
colnames(gene) <- "coef_gene"
View(gene)
exp <- read.xlsx("HCC72.xlsx", sheet = 1, rowNames = TRUE)
# Loading packages--------------------------------------------------------------
library(openxlsx)
exp <- read.xlsx("HCC72.xlsx", sheet = 1, rowNames = TRUE)
exp <- read.xlsx("HCC72.xlsx", sheet = 1, rowNames = TRUE)
object <- exp
head(object)
test <- exp
head(test)
View(test)
setwd("C:/Users/wyh/OneDrive/KeTi/Bulk/Lasso and Cox")
library(magrittr)
library(dplyr)
library(ISLR)
library(glmnet)
library(survival)
library(survminer)
library(MyPackage)
# GSE14520 OS------------------------------------------------------------------
setwd("C:/Users/wyh/OneDrive/KeTi/Bulk/Lasso and Cox")
exp_surv <- read.csv(file = "test dataset/GSE14520_OS.csv", row.names = 1)
View(exp_surv)
str(exp_surv)
load("C:/Users/wyh/OneDrive/KeTi/Bulk/Lasso and Cox/test dataset/GSE14520.Rdata")
View(GSE14520)
setwd("C:/Users/wyh/OneDrive/Github/R/MyPackage/R")
rm(exp)
rm(exp_surv)
rm(object)
test <- GSE14520$exp
head(test)
View(test)
rownames(test) <- test$Symbol
test <- test[,-1]
head(test)
(rownames(gene) %in% rownames(test))
rownames(geen)(rownames(gene) %in% rownames(test))
rownames(gene)(rownames(gene) %in% rownames(test))
rownames(gene)[rownames(gene) %in% rownames(test)]
# Intersection of expression profiles and genes for risk model
gene_intersect <- rownames(gene)[rownames(gene) %in% rownames(test)]
gene <- gene[, match(gene_intersect, rownames(gene))]
rownames(gene)
test <- test[match(gene_intersect, rownames(test)),]
View(test)
View(risk_model)
View(gene)
View(gene)
# 3. Only keep the intersection gene in risk model and expression profiles----
gene <- gene[match(gene_intersect, rownames(gene)),]
# 3. Only keep the intersection gene in risk model and expression profiles----
gene <- gene[match(gene_intersect, rownames(gene)),] %>% as.matrix()
gene
# 1. Component genes and corresponding coefficients of the risk model---------
gene <- coef(risk_model) %>% as.matrix()
colnames(gene) <- "coef_gene" # Setting the colname
# 2. Intersection of expression profiles and genes for risk model-------------
gene_intersect <- rownames(gene)[rownames(gene) %in% rownames(test)]
# 3. Only keep the intersection gene in risk model and expression profiles----
gene <- gene[match(gene_intersect, rownames(gene)),] %>% as.matrix()
test <- test[match(gene_intersect, rownames(test)),]
View(gene)
??apply()
colnames(gene) <- "coef_gene" # Setting the colname
# 4. Lastly, calculate the risk score-----------------------------------------
risk_score <- apply(test, 2, function(x){gene[,"coef_gene"]*x})
View(risk_score)
# 4. Lastly, calculate the risk score-----------------------------------------
risk_score <- apply(test, 2,
function(x){ sum(gene[,"coef_gene"]*x) }
)
head(risk_score)
gene[1]
gene[,1]
gene[1,1]
sum(gene[1,1]*test[1,1] + gene[2,1]*test[2,1] + gene[3,1]*test[3,1] + gene[4,1]*test[4,1]) + gene[5,1]*test[5,1] + gene[6,1]*test[6,1]
# 4. Lastly, calculate the risk score-----------------------------------------
risk_score <- apply(test, 2,
function(x){ sum(gene[,"coef_gene"]*x) }
) %>% as.matrix()
View(risk_score)
colnames(risk_score) <- "risk_score"
return(risk_score)
calc_rs <- function(object){
# readme----------------------------------------------------------------------
# Calculating the risk score of cox model
# package---------------------------------------------------------------------
library(magrittr)
# Import the risk model-------------------------------------------------------
load("risk_model.rds") # risk model
# 1. Component genes and corresponding coefficients of the risk model---------
gene <- coef(risk_model) %>% as.matrix()
colnames(gene) <- "coef_gene" # Setting the colname
# 2. Intersection of expression profiles and genes for risk model-------------
gene_intersect <- rownames(gene)[rownames(gene) %in% rownames(object)]
# 3. Only keep the intersection gene in risk model and expression profiles----
gene <- gene[match(gene_intersect, rownames(gene)),] %>% as.matrix()
colnames(gene) <- "coef_gene" # Setting the colname
object <- object[match(gene_intersect, rownames(object)),]
# 4. Lastly, calculate the risk score-----------------------------------------
risk_score <- apply(object, 2,
function(x){ sum(gene[,"coef_gene"]*x) }
) %>% as.matrix()
colnames(risk_score) <- "risk_score"
# object that the risk score is calculated correctly
# sum(gene[1,1]*object[1,1] + gene[2,1]*object[2,1] + gene[3,1]*object[3,1] + gene[4,1]*object[4,1]) + gene[5,1]*object[5,1] + gene[6,1]*object[6,1]
return(risk_score)
}
calc_rs(object = test)
# Import the risk model-------------------------------------------------------
load("risk_model.rds") # risk model
save(risk_model, "risk_model.RData")
saveRDS(risk_model, "risk_model.RData")
usethis::use_data(risk_model)
demo()
# Import the risk model-------------------------------------------------------
load("data/risk_model.rda") # risk model
# Import the risk model-------------------------------------------------------
load("/data/risk_model.rda") # risk model
# Import the risk model-------------------------------------------------------
load("/data/risk_model.rds") # risk model
# Import the risk model-------------------------------------------------------
load("data/risk_model.rds") # risk model
detach("package:MyPackage", unload = TRUE)
devtools::install_github("wPencil/R/MyPackage")
devtools::install_github("wPencil/R/MyPackage", force = T)
library(MyPackage)
# Import the risk model-------------------------------------------------------
load("data/risk_model.rds") # risk model
data("MyPackage")
usethis::use_data(risk_model)
# Import the risk model-------------------------------------------------------
load("data/risk_model.rds") # risk model
data("risk_model")
View(GSE14520)
